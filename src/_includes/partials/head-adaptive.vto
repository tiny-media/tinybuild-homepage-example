<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<title>{{ title || "Progressive Islands Template" }}</title>
<meta name="description" content="{{ description || 'Clean starting template for progressive island architecture' }}">

<!-- Preload critical CSS for faster rendering -->
<link rel="preload" href="/assets/css/pico_classless.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="/assets/css/pico_classless.css"></noscript>

<!-- Basic theme system (no CSS dependencies) -->
<script>
  (function() {
    let currentTheme = localStorage.getItem('theme') || 'light';
    
    function applyTheme(theme) {
      const html = document.documentElement;
      if (theme === 'auto') {
        html.removeAttribute('data-theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        html.setAttribute('data-theme', prefersDark ? 'dark' : 'light');
        html.style.colorScheme = prefersDark ? 'dark' : 'light';
      } else {
        html.setAttribute('data-theme', theme);
        html.style.colorScheme = theme;
      }
      localStorage.setItem('theme', theme);
    }
    
    function updateButton(button) {
      const themes = {
        light: { icon: '☀', label: 'Light theme' },
        dark: { icon: '☽', label: 'Dark theme' },
        auto: { icon: '⚙', label: 'Auto theme' }
      };
      const theme = themes[currentTheme];
      button.innerHTML = theme.icon;
      button.setAttribute('aria-label', `Switch to next theme (current: ${theme.label})`);
    }
    
    function cycleTheme() {
      const themes = ['light', 'dark', 'auto'];
      const currentIndex = themes.indexOf(currentTheme);
      currentTheme = themes[(currentIndex + 1) % themes.length];
      applyTheme(currentTheme);
      document.querySelectorAll('.theme-toggle').forEach(updateButton);
    }
    
    // Apply initial theme immediately
    applyTheme(currentTheme);
    
    // Setup when DOM ready
    document.addEventListener('DOMContentLoaded', function() {
      document.querySelectorAll('.theme-toggle').forEach(button => {
        updateButton(button);
        button.addEventListener('click', cycleTheme);
      });
      
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
        if (currentTheme === 'auto') applyTheme('auto');
      });
    });
  })();
</script>