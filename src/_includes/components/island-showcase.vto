{{# Advanced island component showcase using VentoJS features #}}

{{ import { islandPlaceholder, formatFileSize } from "../utils/formatters.vto" }}

{{ export function islandDemo(component, type, props = {}, trigger = "visible") }}
  {{ set triggerIcons = {
    visible: '👁️',
    interaction: '👆',
    idle: '⏱️',
    media: '📱'
  } }}
  
  {{ set componentData = {
    counter: { 
      title: 'Interactive Counter',
      description: 'Reactive state with localStorage persistence and cross-tab sync',
      estimatedSize: 1380,
      features: ['Svelte 5 runes', 'Global state', 'Cross-tab sync', 'Persistence']
    },
    greeting: {
      title: 'Dynamic Greeting', 
      description: 'Time-aware greeting with personalized messages',
      estimatedSize: 1220,
      features: ['Async operations', 'Date formatting', 'Props handling']
    },
    statedemo: {
      title: 'State Management Demo',
      description: 'Comprehensive shared state demonstration',
      estimatedSize: 2140,
      features: ['Theme switching', 'Activity tracking', 'Visit history', 'Real-time updates']
    },
    'mobile-menu': {
      title: 'Mobile Navigation',
      description: 'Progressive navigation menu for mobile devices', 
      estimatedSize: 1330,
      features: ['DOM manipulation', 'ARIA support', 'Dynamic creation', 'Event handling']
    },
    'search-toggle': {
      title: 'Search Interface',
      description: 'Modal search interface with keyboard navigation',
      estimatedSize: 1720, 
      features: ['Modal management', 'Keyboard shortcuts', 'Focus management']
    },
  } }}
  
  {{ set data = componentData[component] || { title: component, description: 'Component', estimatedSize: 1000, features: [] } }}
  {{ set propsJson = Object.keys(props).length > 0 ? ` props='${JSON.stringify(props)}'` : '' }}
  
  <div class="island-showcase island stack" style="--stack-space: var(--spacing-md);">
    <div class="cluster" style="--cluster-justify: space-between; --cluster-align: flex-start;">
      <div class="stack" style="--stack-space: var(--spacing-xs);">
        <h4>{{ data.title }}</h4>
        <p class="text-secondary text-sm">{{ data.description }}</p>
      </div>
      <div class="text-xs text-secondary text-right">
        {{ triggerIcons[trigger] || '⚡' }} on:{{ trigger }}<br>
        ~{{ formatFileSize(data.estimatedSize) }}
      </div>
    </div>
    
    {{ if data.features.length > 0 }}
    <div class="stack" style="--stack-space: var(--spacing-xs);">
      <div class="text-xs font-semibold">FEATURES:</div>
      <div class="cluster" style="--cluster-space: var(--spacing-xs);">
        {{ for feature of data.features }}
          <span class="badge badge--feature">{{ feature }}</span>
        {{ /for }}
      </div>
    </div>
    {{ /if }}
    
    <is-land on:{{ trigger }} type="{{ type }}" component="{{ component }}"{{ propsJson |> safe }}>
      {{ islandPlaceholder(type, `Loading ${data.title}...`) }}
    </is-land>
  </div>
{{ /export }}

{{ export function performanceComparison(scenarios) }}
  <div class="performance-comparison island stack" style="--stack-space: var(--spacing-md);">
    <h4>📈 Performance Comparison</h4>
    
    <div class="table-wrapper">
      <table class="performance-table">
        <thead>
          <tr>
            <th>Scenario</th>
            <th class="text-right">Bundle Size</th>
            <th class="text-right">Components</th>
            <th class="text-center">Efficiency</th>
          </tr>
        </thead>
        <tbody>
          {{ for scenario of scenarios }}
            {{ set efficiency = scenario.frameworkSize > 0 ? 
                 ((scenario.componentSize / (scenario.jsSize + scenario.frameworkSize + scenario.componentSize)) * 100).toFixed(1) 
                 : 100 }}
            <tr>
              <td class="font-medium">{{ scenario.name }}</td>
              <td class="text-right font-mono">
                {{ formatFileSize(scenario.jsSize + scenario.frameworkSize + scenario.componentSize) }}
              </td>
              <td class="text-right">{{ scenario.components || 0 }}</td>
              <td class="text-center">
                <span class="badge badge--{{ efficiency > 80 ? 'success' : efficiency > 50 ? 'warning' : 'error' }}">
                  {{ efficiency }}%
                </span>
              </td>
            </tr>
          {{ /for }}
        </tbody>
      </table>
    </div>
  </div>
{{ /export }}